using System;
using System.Diagnostics;
using System.Windows.Forms;

namespace ProcessManager
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            // Hiển thị danh sách các process đang chạy
            DisplayProcess();
        }

        private void btnBrowse_Click(object sender, EventArgs e)
        {
            // Tạo form duyệt chọn file khả thi cần chạy
            OpenFileDialog dlg = new OpenFileDialog();
            // Hiển thị form duyệt chọn file khả thi cần chạy
            DialogResult ret = dlg.ShowDialog();
            // Kiểm tra quyết định của người dùng, nếu người dùng chọn OK thì ghi nhận tên file
            if (ret == DialogResult.OK)
                txtPath.Text = dlg.FileName;
        }

        private void btnStart_Click(object sender, EventArgs e)
        {
            // Tạo mới đối tượng quản lý Process
            Process myProcess = new Process();
            try
            {
                // Thiết lập đường dẫn file cần chạy
                myProcess.StartInfo.FileName = txtPath.Text;
                // Kích hoạt process
                myProcess.Start();
                // Hiển thị danh sách các process đang chạy
                DisplayProcess();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void btnStop_Click(object sender, EventArgs e)
        {
            // Xác định tên, ID của process đang được chọn để xóa
            if (lbOutput.SelectedItem != null)
            {
                string[] param = lbOutput.SelectedItem.ToString().Split(',');
                // Tìm đối tượng quản lý process có ID xác định
                Process proc = Process.GetProcessById(Int32.Parse(param[1]));
                // Xóa process
                proc.Kill();
                // Hiển thị lại danh sách các process đang chạy
                DisplayProcess();
            }
        }

        private void btnRefresh_Click(object sender, EventArgs e)
        {
            // Hiển thị lại danh sách các process đang chạy hiện hành
            DisplayProcess();
        }

        void DisplayProcess()
        {
            // Xóa nội dung cũ của ListBox
            lbOutput.Items.Clear();
            // Tìm danh sách các process đang chạy
            Process[] plist = Process.GetProcesses();
            // Hiển thị tên, ID của từng process
            foreach (Process process in plist)
            {
                lbOutput.Items.Add(process.ProcessName + ", " + process.Id);
            }
        }
    }
}
